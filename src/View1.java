
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matataba
 */
public class View1 extends javax.swing.JFrame {

    /**
     * Creates new form View1
     */
    String data11="";
    String data="";
    String mw="";
    int erorrer=0;
    int a=0;
    
      DefaultTableModel model;
    public View1() {
        initComponents();
      try {
            nix();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
public void nix() throws FileNotFoundException{
        
          Scanner sc= new Scanner(new FileReader("C:\\Users\\Matataba\\Documents\\NetBeansProjects\\Flower_CS\\src\\cinema#.txt"));
      
         
                while(sc.hasNextLine()){
             String line=sc.nextLine();
             Scanner sline = new Scanner(line);
             while(sline.hasNext()){
             String data=sline.next();
             String getter=sline.next();
             String a=sline.next();
                String a1=sline.next();      
             if(a.equals("Active")){
                 cb.addItem("C"+getter);
             }
             } 
            }

        
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cb = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        MW = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("ZOMBIE", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Client");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(5, 5, 33));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MovieMax!", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        cb.setBackground(new java.awt.Color(255, 255, 255));
        cb.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Cinema Theater" }));
        cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 153, 0));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 153, 0));
        jButton2.setText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        MW.setForeground(new java.awt.Color(255, 255, 255));
        MW.setText("Most Watch");
        MW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MWActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("ZOMBIE", 1, 40)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("view");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MW, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(89, 89, 89))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MW, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(5, 5, 33));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movies", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "Quality", "Price"
            }
        ));
        table.setEnabled(false);
        table.setGridColor(new java.awt.Color(0, 255, 204));
        table.setSelectionBackground(new java.awt.Color(204, 204, 0));
        table.setSelectionForeground(new java.awt.Color(204, 0, 0));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbActionPerformed
    int counter=0;  
 
           if(erorrer==1){
               model.setRowCount(0); 
                erorrer--;
        }
 
    
    data= (String) cb.getSelectedItem();
       if(data.equals("Select Cinema Theater")){
            JOptionPane.showMessageDialog(null,"Must select which cinema !"); 
       }
       else{
              erorrer++;
       }
  

//    if(data.equals("Select Cinema Theater")){
//     
//           JOptionPane.showMessageDialog(null,"Select Cinema!!!"); 
//               if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//     }
//      else if(data.equals("Cinema 1")){
//   
//        data="C1";
//        if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 2")){
//       data="C2";
// 
//         if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//       
//    } else if(data.equals("Cinema 3")){
//     data="C3";  
//     
//      if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 4")){
//  data="C4";     
//  if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 5")){
//     data="C5"; 
//     if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 6")){
//      data="C6";  
//      if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 7")){
//     data="C7";  if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 8")){
//     data="C8"; if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    } else if(data.equals("Cinema 9")){
//     data="C9";   
//    if(erorrer==1){
//                model.setRowCount(0);
//                erorrer--;
//        }
//    }
//  
//      
    }//GEN-LAST:event_cbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 new client().setVisible(true);
 setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      int ave=0;int counter=0;
           
              model =(DefaultTableModel) table.getModel();
             // TODO add your handling code here:

            if(data.equals("")){
                  JOptionPane.showMessageDialog(null,"Must select cinema!"); 
                  counter++;
            }
            else{
                  Scanner sc;
       
            
         try {
             sc = new Scanner(new FileReader("C:\\Users\\Matataba\\Documents\\NetBeansProjects\\Flower_CS\\src\\movies.txt"));
        
           if(erorrer==1){
               model.setRowCount(0); 
                erorrer--;
        }
             while(sc.hasNextLine()){
             String line=sc.nextLine();
             Scanner sline= new Scanner(line);
        
             while(sline.hasNext()){
             String Avail=sline.next();
             String quality=sline.next();
             String moviefromfile=sline.next();
             double price=sline.nextDouble();
             int seat=sline.nextInt();
             String c=sline.next();
             
                if(c.equals(data)){
                     counter++;
                     Object row[]={moviefromfile,quality,price};
                       model.addRow(row);
                }
              
                
                  
             }
             }
         
             
           if(counter==0){
                   JOptionPane.showMessageDialog(null,"No movie in that cinema yet"); 
                   counter--;
                   
                   
           }
             
        } catch (FileNotFoundException ex) {
             Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
         }
            }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void MWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MWActionPerformed
    int counter=0;     

     
     if(MW.isSelected()){
        
if(data.equals("")||data.equals("Select Cinema Theater")){
    
     JOptionPane.showMessageDialog(null,"Must select which cinema first!"); 
}  else{   model.setRowCount(0); try {
      JOptionPane.showMessageDialog(null,"Most watch Activated."); 
              Scanner sc = new Scanner(new FileReader("C:\\Users\\Matataba\\Documents\\NetBeansProjects\\Flower_CS\\src\\movies.txt"));
            while(sc.hasNextLine()){
                String line=sc.nextLine();
                Scanner sline= new Scanner(line);
                
                while(sline.hasNext()){
                    String Avail=sline.next();
                    String quality=sline.next();
                    String moviefromfile=sline.next();
                    double price=sline.nextDouble();
                    int seat=sline.nextInt();
                    String c=sline.next();
                     
                    if(c.equals(data) && seat<=100){
                      
                        counter++;
                        Object row[]={moviefromfile,quality,price};
                        model.addRow(row);
                    }
                    
                }
            }
            if(counter==0){
                 JOptionPane.showMessageDialog(null," No most watch yet From this cinema"); 
            }
             } catch (FileNotFoundException ex) {
            Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
        }
}
     }
     else {
         Scanner sc;
         try {model.setRowCount(0); 
         JOptionPane.showMessageDialog(null,"Most watch Deactivated."); 
             sc = new Scanner(new FileReader("C:\\Users\\Matataba\\Documents\\NetBeansProjects\\Flower_CS\\src\\movies.txt"));
         
           while(sc.hasNextLine()){
                String line=sc.nextLine();
                Scanner sline= new Scanner(line);
                
                while(sline.hasNext()){
                    String Avail=sline.next();
                    String quality=sline.next();
                    String moviefromfile=sline.next();
                    double price=sline.nextDouble();
                    int seat=sline.nextInt();
                    String c=sline.next();
                    
                    if(c.equals(data)){
                      
                        counter++;
                        Object row[]={moviefromfile,quality,price};
                        model.addRow(row); 
                        
                    }
                }
           }
           } catch (FileNotFoundException ex) {
             Logger.getLogger(View1.class.getName()).log(Level.SEVERE, null, ex);
         }
           
     }

       
    }//GEN-LAST:event_MWActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox MW;
    private javax.swing.JComboBox<String> cb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
